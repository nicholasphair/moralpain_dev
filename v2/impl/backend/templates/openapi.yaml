components:
  schemas:
    submission:
      properties:
        score:
          type: integer
        selections:
          items:
            type: string
          type: array
        submitterId:
          type: string
        timestamp:
          type: integer
      type: object
    submissions:
      items:
        $ref: '#/components/schemas/submission'
      type: array
    survey:
      properties:
        sections:
          items:
            $ref: '#/components/schemas/surveySection'
          type: array
        version:
          type: string
      type: object
    surveyOption:
      properties:
        description:
          type: string
        id:
          type: string
      type: object
    surveySection:
      properties:
        options:
          items:
            $ref: '#/components/schemas/surveyOption'
          type: array
        sectionId:
          type: string
        subtitle:
          type: string
        title:
          type: string
      type: object
  securitySchemes:
    sigv4Reference:
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
info:
  description: survey
  title: survey
  version: 1.0.0
openapi: 3.0.0
paths:
  /receive:
    get:
      description: 'receive

        '
      operationId: receive
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/survey'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      security:
      - sigv4Reference: []
      summary: receive
      x-amazon-apigateway-integration:
        credentials: arn:aws:iam::${AWS::AccountId}:role/apigateway_s3_survey_role
        httpMethod: get
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Content-Sha256,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: '200'
        type: aws
        uri: arn:aws:apigateway:${AWS::Region}:s3:path/moralpain-resources/questionnaire.json
  /submit:
    post:
      description: 'submit

        '
      operationId: submit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/submission'
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      security:
      - sigv4Reference: []
      summary: submit
      x-amazon-apigateway-integration:
        credentials: arn:aws:iam::${AWS::AccountId}:role/apigateway-lambda-submit-role
        httpMethod: post
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Content-Sha256,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: '200'
        type: aws_proxy
        uri: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:feurrefsplvSurveySubmit/invocations
